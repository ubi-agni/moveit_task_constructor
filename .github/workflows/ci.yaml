# This config uses industrial_ci (https://github.com/ros-industrial/industrial_ci.git).
# For troubleshooting, see readme (https://github.com/ros-industrial/industrial_ci/blob/master/README.rst)

name: CI

on:
  workflow_dispatch:
  pull_request:

jobs:
  default:
    strategy:
      fail-fast: false
      matrix:
        env:
          - IMAGE: noetic-source
            CLANG_TIDY: pedantic
            TARGET_CMAKE_ARGS: >-
              -DCMAKE_BUILD_TYPE=Release
              -DCMAKE_CXX_FLAGS="-Werror -Wall -Wextra -Wwrite-strings -Wunreachable-code -Wpointer-arith -Wredundant-decls"

    env:
      CATKIN_LINT: true
      CLANG_TIDY_ARGS: -quiet -export-fixes ${{ github.workspace }}/.work/clang-tidy-fixes.yaml
      DOCKER_IMAGE: moveit/moveit:${{ matrix.env.IMAGE }}
      UNDERLAY: /root/ws_moveit/install
      DOWNSTREAM_WORKSPACE: "github:ubi-agni/mtc_demos#master github:TAMS-Group/mtc_pour#master"
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      BASEDIR: ${{ github.workspace }}/.work
      CACHE_PREFIX: "${{ matrix.env.IMAGE }}${{ contains(matrix.env.TARGET_CMAKE_ARGS, '--coverage') && '-ccov' || '' }}"
      # perform full clang-tidy check only on manual trigger (workflow_dispatch), PRs do check changed files, otherwise nothing
      CLANG_TIDY_BASE_REF: ${{ github.event_name != 'workflow_dispatch' && (github.base_ref || github.ref) || '' }}
      CC: ${{ matrix.env.CLANG_TIDY && 'clang' }}
      CXX: ${{ matrix.env.CLANG_TIDY && 'clang++' }}

    name: "${{ matrix.env.IMAGE }}${{ matrix.env.NAME && ' • ' || ''}}${{ matrix.env.NAME }}${{ matrix.env.CATKIN_LINT && ' • catkin_lint' || ''}}${{ matrix.env.CLANG_TIDY && ' • clang-tidy' || '' }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache ccache
        uses: rhaschke/cache@main
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ env.CACHE_PREFIX }}-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ env.CACHE_PREFIX }}-${{ github.sha }}
            ccache-${{ env.CACHE_PREFIX }}
        env:
          GHA_CACHE_SAVE: always

      - id: ici
        name: Run industrial_ci
        uses: rhaschke/industrial_ci@clang-tidy
        env: ${{ matrix.env }}

      - name: Process clang-tidy warnings
        if: always() && matrix.env.CLANG_TIDY && github.event_name == 'pull_request'
        uses: oleg-derevenetz/clang-tidy-pr-comments@multibyte-fix
        with:
          clang_tidy_fixes: ${{ env.BASEDIR }}/clang-tidy-fixes.yaml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          suggestions_per_comment: 10

      - name: Upload clang-tidy fixes (on failure)
        uses: actions/upload-artifact@v3
        if: failure() && (steps.ici.outputs.clang_tidy_checks)
        with:
          name: clang-tidy-fixes.yaml
          path: ${{ env.BASEDIR }}/clang-tidy-fixes.yaml
